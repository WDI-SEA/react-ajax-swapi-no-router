{"ast":null,"code":"var _jsxFileName = \"/Users/shawnpatrickstover/Desktop/GA/SEIR/unit-3/Deliverables/swapi/src/components/Starship.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pilot from './pilot.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Starship(props) {\n  _s();\n\n  const ship = props.ship;\n  const [pilots, setPilots] = useState([]);\n  useEffect(() => {\n    (async function getPilots() {\n      const urls = ship.pilots;\n      let responses = urls.map(url => axios.get(url));\n      responses = await Promise.all(responses);\n      let responseData = [];\n      responses.forEach(response => responseData = [...responseData, response.data]);\n      setPilots(responseData);\n    })();\n  }, [pilots]);\n  const renderPilots = pilots.map((pilot, index) => {\n    return /*#__PURE__*/_jsxDEV(Pilot, {\n      pilot: pilot\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.ship.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", props.ship.starship_class]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hyperdrive Rating: \", props.ship.hyperdrive_rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Manufacturer: \", props.ship.manufacturer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Pilots:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), renderPilots.length > 0 ? renderPilots : 'no pilots found']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Starship, \"eZENKofkYrN8P/mBTajSm33b0r8=\");\n\n_c = Starship;\n\nvar _c;\n\n$RefreshReg$(_c, \"Starship\");","map":{"version":3,"sources":["/Users/shawnpatrickstover/Desktop/GA/SEIR/unit-3/Deliverables/swapi/src/components/Starship.jsx"],"names":["React","useState","useEffect","axios","Pilot","Starship","props","ship","pilots","setPilots","getPilots","urls","responses","map","url","get","Promise","all","responseData","forEach","response","data","renderPilots","pilot","index","name","starship_class","hyperdrive_rating","manufacturer","length"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,eAAeQ,SAAf,GAA2B;AACxB,YAAMC,IAAI,GAAGJ,IAAI,CAACC,MAAlB;AAEA,UAAII,SAAS,GAAGD,IAAI,CAACE,GAAL,CAASC,GAAG,IAAIX,KAAK,CAACY,GAAN,CAAUD,GAAV,CAAhB,CAAhB;AAEAF,MAAAA,SAAS,GAAG,MAAMI,OAAO,CAACC,GAAR,CAAYL,SAAZ,CAAlB;AACA,UAAIM,YAAY,GAAG,EAAnB;AACAN,MAAAA,SAAS,CAACO,OAAV,CAAkBC,QAAQ,IAAIF,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBE,QAAQ,CAACC,IAA3B,CAA7C;AAEAZ,MAAAA,SAAS,CAACS,YAAD,CAAT;AACH,KAVD;AAWH,GAZQ,EAYN,CAACV,MAAD,CAZM,CAAT;AAcA,QAAMc,YAAY,GAAGd,MAAM,CAACK,GAAP,CAAW,CAACU,KAAD,EAAQC,KAAR,KAAkB;AAC9C,wBACI,QAAC,KAAD;AAEI,MAAA,KAAK,EAAED;AAFX,OACSC,KADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPoB,CAArB;AASA,sBACI;AAAA,4BACI;AAAA,gBAAKlB,KAAK,CAACC,IAAN,CAAWkB;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,4BAAWnB,KAAK,CAACC,IAAN,CAAWmB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAA,wCAAuBpB,KAAK,CAACC,IAAN,CAAWoB,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI;AAAA,mCAAkBrB,KAAK,CAACC,IAAN,CAAWqB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAWKN,YAAY,CAACO,MAAb,GAAsB,CAAtB,GAA0BP,YAA1B,GAAyC,iBAX9C;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA1CuBjB,Q;;KAAAA,Q","sourcesContent":["import React, {\n    useState,\n    useEffect\n} from 'react'\nimport axios from 'axios'\nimport Pilot from './pilot.jsx'\n\nexport default function Starship(props) {\n    const ship = props.ship\n    const [pilots, setPilots] = useState([])\n\n    useEffect(() => {\n        (async function getPilots() {\n            const urls = ship.pilots\n\n            let responses = urls.map(url => axios.get(url))\n\n            responses = await Promise.all(responses)\n            let responseData = []\n            responses.forEach(response => responseData = [...responseData, response.data])\n\n            setPilots(responseData)\n        })()\n    }, [pilots])\n\n    const renderPilots = pilots.map((pilot, index) => {\n        return(\n            <Pilot\n                key={index}\n                pilot={pilot}\n            />\n        )\n    })\n\n    return(\n        <div>\n            <h3>{props.ship.name}</h3>\n\n            <p>Class: {props.ship.starship_class}</p>\n\n            <p>Hyperdrive Rating: {props.ship.hyperdrive_rating}</p>\n\n            <p>Manufacturer: {props.ship.manufacturer}</p>\n\n            <h4>Pilots:</h4>\n\n            {renderPilots.length > 0 ? renderPilots : 'no pilots found'}\n        </div>\n    )\n}    "]},"metadata":{},"sourceType":"module"}
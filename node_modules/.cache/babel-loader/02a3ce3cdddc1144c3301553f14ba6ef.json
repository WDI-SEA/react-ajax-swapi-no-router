{"ast":null,"code":"var _jsxFileName = \"/Users/shawnpatrickstover/Desktop/GA/SEIR/unit-3/Deliverables/swapi/src/components/Starship.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pilot from './pilot.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Starship(props) {\n  _s();\n\n  const ship = props.ship;\n  const [pilots, setPilots] = useState([]);\n  useEffect(() => {\n    (async function getPilots() {\n      const urls = ship.pilots;\n      let responses = urls.map(url => axios.get(url));\n      responses = await Promise.all(responses);\n      let responseData = [];\n      responses.forEach(response => responseData = [...responseData, response.data]);\n      setPilots(responseData);\n    })();\n  }, [pilots, ship.pilots]);\n  const renderPilots = pilots.map((pilot, index) => {\n    return /*#__PURE__*/_jsxDEV(Pilot, {\n      pilot: pilot\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.ship.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", props.ship.starship_class]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hyperdrive Rating: \", props.ship.hyperdrive_rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Manufacturer: \", props.ship.manufacturer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Pilots:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), renderPilots.length > 0 ? renderPilots : \"no pilots found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Starship, \"eZENKofkYrN8P/mBTajSm33b0r8=\");\n\n_c = Starship;\n\nvar _c;\n\n$RefreshReg$(_c, \"Starship\");","map":{"version":3,"sources":["/Users/shawnpatrickstover/Desktop/GA/SEIR/unit-3/Deliverables/swapi/src/components/Starship.jsx"],"names":["useState","useEffect","axios","Pilot","Starship","props","ship","pilots","setPilots","getPilots","urls","responses","map","url","get","Promise","all","responseData","forEach","response","data","renderPilots","pilot","index","name","starship_class","hyperdrive_rating","manufacturer","length"],"mappings":";;;AAAA,SACIA,QADJ,EAEIC,SAFJ,QAGS,OAHT;AAIE,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,eAAeQ,SAAf,GAA2B;AAC1B,YAAMC,IAAI,GAAGJ,IAAI,CAACC,MAAlB;AAEA,UAAII,SAAS,GAAGD,IAAI,CAACE,GAAL,CAASC,GAAG,IAAIX,KAAK,CAACY,GAAN,CAAUD,GAAV,CAAhB,CAAhB;AAEAF,MAAAA,SAAS,GAAG,MAAMI,OAAO,CAACC,GAAR,CAAYL,SAAZ,CAAlB;AACA,UAAIM,YAAY,GAAG,EAAnB;AACAN,MAAAA,SAAS,CAACO,OAAV,CAAkBC,QAAQ,IAAIF,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBE,QAAQ,CAACC,IAA3B,CAA7C;AAEAZ,MAAAA,SAAS,CAACS,YAAD,CAAT;AACD,KAVD;AAWD,GAZQ,EAYN,CAACV,MAAD,EAASD,IAAI,CAACC,MAAd,CAZM,CAAT;AAgBA,QAAMc,YAAY,GAAGd,MAAM,CAACK,GAAP,CAAW,CAACU,KAAD,EAAQC,KAAR,KAAkB;AAChD,wBACE,QAAC,KAAD;AAEE,MAAA,KAAK,EAAED;AAFT,OACOC,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPoB,CAArB;AAWA,sBACE;AAAA,4BACE;AAAA,gBAAKlB,KAAK,CAACC,IAAN,CAAWkB;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,4BAAWnB,KAAK,CAACC,IAAN,CAAWmB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA,wCAAuBpB,KAAK,CAACC,IAAN,CAAWoB,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA,mCAAkBrB,KAAK,CAACC,IAAN,CAAWqB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAWIN,YAAY,CAACO,MAAb,GAAsB,CAAtB,GAA0BP,YAA1B,GAAyC,iBAX7C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA9CuBjB,Q;;KAAAA,Q","sourcesContent":["import { \n    useState, \n    useEffect \n  } from 'react'\n  import axios from 'axios'\n  import Pilot from './pilot.jsx'\n  \n  export default function Starship(props) {\n    const ship = props.ship\n    const [pilots, setPilots] = useState([])\n  \n    useEffect(() => {\n      (async function getPilots() {\n        const urls = ship.pilots\n  \n        let responses = urls.map(url => axios.get(url))\n  \n        responses = await Promise.all(responses)\n        let responseData = []\n        responses.forEach(response => responseData = [...responseData, response.data])\n  \n        setPilots(responseData)\n      })()\n    }, [pilots, ship.pilots])\n  \n  \n  \n    const renderPilots = pilots.map((pilot, index) => {\n      return(\n        <Pilot\n          key={index}\n          pilot={pilot}\n        />\n      ) \n    })\n  \n  \n  \n    return (\n      <div>\n        <h3>{props.ship.name}</h3>\n  \n        <p>Class: {props.ship.starship_class}</p>\n  \n        <p>Hyperdrive Rating: {props.ship.hyperdrive_rating}</p>\n  \n        <p>Manufacturer: {props.ship.manufacturer}</p>\n  \n        <h4>Pilots:</h4>\n  \n        { renderPilots.length > 0 ? renderPilots : \"no pilots found\" }\n      </div>\n    )\n  }"]},"metadata":{},"sourceType":"module"}